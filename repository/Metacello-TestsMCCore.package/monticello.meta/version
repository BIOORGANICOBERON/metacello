(name 'Metacello-TestsMCCore-dkh.65' message 'add a third package to the BaselineLoadType tests so that #includes: can be tested ' id 'fe107a75-405d-4be8-a151-9a1004ac1feb' date '10/03/2016' time '20:22:26' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.64' message 'adjust tests for travis' id '69a67d70-cfa6-43ef-a20f-dd2cbc276e68' date '10/03/2016' time '12:08:52' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.63' message 'add record test for a project reference as well as atomic vs linear loads' id '9ae6cb44-63d5-4c7f-8942-57fa635598f6' date '10/01/2016' time '14:27:15' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.62' message 'fix tests to pass with both atomic and linear load types' id '6cfc3608-3195-4b77-9fd7-3ac953501d16' date '10/01/2016' time '11:49:29' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.61' message 'new record tests portability patch' id 'eff7359c-00ce-475f-919b-b04a5cac5d39' date '10/01/2016' time '11:42:38' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.60' message 'expand record coverage for baselines a bit more ' id 'fe1eb89c-a855-4107-94ff-ebc702823b0f' date '10/01/2016' time '11:29:42' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.59' message 'fixing a bug in MetacelloNullRecordingMCSpecLoader>>resolveRecordingPackageSpecReference:gofer: for using record with Baselines ... GoferResolvedReference used instead of GoferPackageReference for baseline packages which have no mcz version numbers associated with them ... additional tests' id 'cf2088c9-fff5-4b9e-a63a-f44afc0ce0e3' date '09/30/2016' time '16:51:59' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.58' message 'turns out that pre/post load doits may not be firing in GsCypress variant of Metacello, so add explicit baseline tests for pre/post load doits:MetacelloCommonBaselineLoadTypeTests>>testPrePostLoadDoits ' id 'eb428667-6425-4a0e-8595-de398a50755d' date '09/29/2016' time '16:24:55' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.57' message 'fiddle with MetacelloCommonBaselineLoadTypeTests>>testBasicAtomicLoad' id '839d4bd9-f36a-4296-83cd-231025089045' date '09/29/2016' time '14:20:51' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.56' message 'get the MetacelloCommonBaselineLoadTypeTests>>testBasicAtomicLoad test to pass for Monticello ... atomic loadType needs to be implemented for Cypress' id '2f5efd27-6ffd-4a90-8070-5b0e487680c4' date '09/28/2016' time '19:39:46' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.55' message 'first cut at MetacelloCommonBaselineLoadTypeTests>>testBasicAtomicLoad (which should tests #linear and #atomic load behavior --- althought the test needs refinement, because it is currently passing for the Monticello/linear combo and this combo must be expected to fail with the #atomicSharedMethod method missing ... ' id '1b981524-ad14-48b5-a403-dbd91f388e1a' date '09/28/2016' time '16:42:40' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.54' message 'building up an atomic/linear test structure for baselines and cypress' id '022acee1-b5c5-4cbe-a4c9-b9db86e1f369' date '09/28/2016' time '16:26:59' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.53' message 'tag MetacelloCommonBaselineTests as abstract' id 'a63a0368-23f0-47c4-89bb-4213481c9fc1' date '09/28/2016' time '11:58:43' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.52' message 'insert MetacelloCommonBaselineTests into MetacelloAbstractBaselineTests structure so that atomic tests (coming) can share the atract implementation' id 'f27e0fba-0a84-49ef-beda-10304f7c5ee2' date '09/28/2016' time '11:58:06' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.51' message 'MetacelloAbstractBaselineTests>>testOnWarningLogDuringLoad and MetacelloAbstractBaselineTests>>testWarningDuringLoad to Metacello-TestsBaselineMonticello package, since Cypress does not support notification when loading over dirty packages ... yet?' id '50e9da26-37d5-4cac-a225-1a4a7f784922' date '09/28/2016' time '11:04:35' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.50' message 'working on MetacelloAbstractBaselineTests>>testOnWarningLogDuringLoad' id '6beb1d9c-aca2-4ff5-b2af-b3796b809e6b' date '09/28/2016' time '08:14:34' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.49' message 'add MetacelloAbstractBaselineTests>>testOnWarningLogDuringLoad' id '81bfadcc-5f8c-4c45-abf9-59f69048baab' date '09/28/2016' time '07:58:14' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.48' message 'fix some test errors' id 'e20b3b68-1a22-4be8-a8ea-39da6effb12f' date '09/28/2016' time '06:57:03' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.47' message 'expand the list of MetacelloAbstractBaselineTests: add additional conflict tests and cover scripting erros for baselines' id 'b4f3dc5d-7619-4d06-9531-3add16ab07b5' date '09/28/2016' time '06:44:54' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.46' message 'move MetacelloProjectRegistrationTestCase to Metacello-TestsMCCore package (share with base)' id 'bb31bf26-c090-4c86-82cf-43b1e2d06239' date '09/26/2016' time '17:11:00' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.45' message 'fix a long-standing unlock bug (unlock of a non-github project left unlocked/unloaded registration in registry that resulted in a conflict on next load .. but that shouldn''t be only locked or loaded registrations should give a conflict; add a number of tests to MetacelloAbstractBaselineTests stack ... ' id 'd340fbec-d1ce-4c9a-9ac6-0e62dfcfe88e' date '09/26/2016' time '16:14:53' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.44' message 'add globalrepo repository scheme for use in tests baselines ... allows one to store an url in Globals at test run time, while using a fixed baseline spec; add a baseline that references another project to resources; add several new baseline tests: MetacelloAbstractBaselineTests>>testBaselineConflict6WithLock1, MetacelloAbstractBaselineTests>>testBaselineConflict6WithLock2, MetacelloAbstractBaselineTests>>testBaselineReferenceLoad6 plus a validation method' id 'dbe7c8c8-6aba-4579-af98-633be769b787' date '09/21/2016' time '15:19:28' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.43' message 'remove duplicate tests' id '4d47d469-4101-4704-8193-766cac276eb2' date '09/21/2016' time '13:40:34' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.42' message 'improve patch for the direct load of the locked baseline in previous commit --- should only apply to the lookup of the project in MetacelloScriptingEngine' id '88802b57-356a-4351-8680-fc3250044599' date '09/21/2016' time '12:46:51' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.41' message 'in testBasicBaselineLockNloadNew, the direct load of the locked baseline _should_ be allowed as direct loads are honored whether or not the project is locked ... the new repository should be locked at this point ... anyway ... this wasn''t quite working ... need to see ripple effects of this change plus implement an explicit test to ensure that locks are otherwise honored ...' id '36c9403e-f39b-4aec-b779-4da46ba5e3b9' date '09/21/2016' time '11:16:43' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.40' message 'result of MetacelloCypressBaselineResource>>createPackage:packageVersion:in:withDefinitions:info: needs to be either an empty array or an array with a MCVersionInfo instance' id '21f2b77c-1494-4c26-9c3b-5f77f576ee02' date '09/21/2016' time '09:29:24' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.39' message 'tweak' id 'b0671123-07d1-479e-924e-399d1489d608' date '09/20/2016' time '11:05:35' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.38' message 'need to define MetacelloAbstractBaselineTests>>alternatePath and friends' id '202481b0-5a31-429e-a76c-5d3709aee6b2' date '09/20/2016' time '10:30:13' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.37' message 'tweakn''' id '424b8ff5-6ed6-40ed-b1a4-fa226fab7d3f' date '09/19/2016' time '17:26:12' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.36' message 'fiddle faddle' id 'e3c13815-e246-4766-bbe8-1d91d3510dd9' date '09/19/2016' time '17:24:58' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.35' message 'patch part II' id '6fc89c8e-687c-4917-ae18-55c0cc444e1f' date '09/19/2016' time '17:21:27' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.34' message 'patch' id 'fcdc15b2-7e33-40c9-b635-1864cb5b2a08' date '09/19/2016' time '17:20:29' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.33' message 'tweak' id '3a0c02d4-2709-4617-9ba7-f6086c3665f3' date '09/19/2016' time '17:16:27' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.32' message 'add 6 more tests, an additional test repository with slightly different package contents' id '953491d9-c131-4168-8a03-878e8c3db48c' date '09/19/2016' time '17:13:50' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.31' message 'fix test bug?' id '7bf8016e-f00e-4199-9414-d9ebabb5c298' date '09/19/2016' time '12:19:49' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.30' message 'expand MetacelloAbstractBaselineTests>>testFileTreeLoadBaseline1 to include assertions verifying that package was loaded now that Metacello load ran without errors ...' id '43990062-e7ee-4c45-98a2-43d99321d959' date '09/19/2016' time '12:15:16' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.29' message 'correct tweak typo .. a twypo' id 'abcf32e2-486f-435e-bd2f-4973549a34bf' date '09/19/2016' time '11:55:56' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.28' message 'tweak MetacelloAbstractBaselineTests>>tearDownRepositories' id '34146bdc-47e5-4550-b0ad-05e535c71918' date '09/19/2016' time '11:55:08' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.27' message 'do a get in MetacelloAbstractBaselineTests>>testFileTreeLoadBaseline1 ... probably not cleaning up correctly?' id '5fa5342d-bbce-4584-9a1f-acd82d6c23d0' date '09/16/2016' time '14:17:47' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.26' message 'fix project spec printing bug and take a crack at getting cypress project spec introduced earlier than original' id '01215111-6a6c-44be-aa9a-b432e0b6a27c' date '09/16/2016' time '14:14:17' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.25' message 'let''s start by focussing on MetacelloCypressBaselineProject only ...' id 'ca18b59e-41f6-46a9-ba9b-4d172a3b86e1' date '09/16/2016' time '11:45:42' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.24' message 'tweak MetacelloAbstractBaselineTests>>testFileTreeLoadBaseline1 for portability' id '6b04a3ab-fe04-4db1-a6df-dcc4b364fc47' date '09/16/2016' time '11:03:39' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.23' message 'let''s use strings for package and class names in MetacelloAbstractBaselineResource' id '91b785ea-7b91-4f15-9920-010d384523d9' date '09/16/2016' time '10:53:13' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.22' message 'get MetacelloAbstractBaselineTests>>setUpRepositoryContents running in base' id '835bc062-357a-455b-add3-0c20bc03536a' date '09/16/2016' time '10:29:43' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.21' message 'getting MetacelloAbstractBaselineTests>>setUpRepositories to work in GemStone base ... directory monkey business' id '9d46eb80-b0f7-4877-bde1-58ca937384dd' date '09/16/2016' time '10:24:42' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.20' message 'a bit more portable implementation' id '75e74b3a-e1f5-41a6-aecd-a11c727edb15' date '09/16/2016' time '06:49:06' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.19' message 'push things around a bit more in the BaselineTest arena ... also load Metacello-TestsBaselineGsCypress into a 3.4 system -- in reality GsCypress and Monticello will have to co-exist in the same GsDevKit image, so now is a good time to start ... MetacelloAbstractBaselineTests and MetacelloAbstractBaselineResource are going to be a good model for how things will be worked out...' id '44867631-585b-4b74-9dba-9bc29effd151' date '09/16/2016' time '05:13:39' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.18' message 'the package Metacello-TestsBaselineCypress is not to be loaded in  Monticello environment ... going to be specific to GemStone base image ' id 'f4cf00b9-1e46-4ea8-8406-1b48d2126152' date '09/15/2016' time '18:30:13' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.17' message 'MetacelloMonticelloBaselineTests test passing' id '71ca1694-a5b6-4812-b65f-408130ee7d23' date '09/15/2016' time '17:31:00' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.16' message 'preparing to run test with MetacelloMonticelloBaselineTests' id '7b4d63a6-3a06-4474-9be3-6f08382e7a4f' date '09/15/2016' time '17:18:41' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.15' message 'gearing up to create pure baseline/filetree tests that can be shared between a Monticello Filetree reader and a Cypress FileTree reader ... resources are there for populating the "repository"' id '0b5d4d64-e424-4186-b1f1-369bac57dccf' date '09/15/2016' time '16:02:21' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.14' message 'define abstract tests cases in MetacelloSpecTestCase hierarchy' id '6b2d5c81-a47a-4bc5-86b0-6cd4863059f4' date '09/14/2016' time '18:23:56' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.13' message 'make pass through the MetacelloSpecTestCase test hierarchy and add baseline tests where needed and move tests to Metacello-TestsMonticello package where called for ' id 'ee496619-7db7-4dba-abec-226cf0dd0094' date '09/14/2016' time '15:14:32' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.12' message 'move MetacelloMCGroupSpecTestCase to TestsMonticello package --- ConfigurationOf-based test' id '4b55cb0e-c6c5-4a7f-9aca-508120be4686' date '09/14/2016' time '12:55:32' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.11' message 'MetacelloBaselineGroupSpecTestCase to isolate group testing for a BaselineOf' id '698b8877-6226-4dee-bfcd-b718fba24aba' date '09/14/2016' time '11:40:53' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.10' message 'implement MetacelloPlatform>>sort:with: and add tests' id '4d2df593-da43-4979-99ed-dd09bf6af230' date '09/12/2016' time '14:01:35' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.9' message 'implement MetacelloPlatform>>matchPattern:in: including GsCypress version and add tests' id '5b1f520c-7cce-473f-ae44-9e86bf92776b' date '09/12/2016' time '13:40:43' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.8' message 'implement MetacelloPlatform>>findTokens:in: and add test' id 'bab5f722-48a2-4b90-b90a-265e363fb047' date '09/12/2016' time '12:10:41' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-TravisCI.7' message 'Issue #405: proposed bugfix and test' id '97476c8a-246a-4ec2-89ae-31527b8b2f8d' date '07/28/2016' time '03:42:06' author 'TravisCI' ancestors ((name 'Metacello-TestsMCCore-dkh.6' message 'Issue #295: get new load order logic correct for default load order (no dependencies specified) ... fix up tests' id '0b35a98c-39f6-43e9-9436-64ac140db815' date '10/03/2014' time '18:20:14' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.5' message 'slight wobble detected ... more rebalancing needed' id '6d8e678c-f1e9-4a20-95c6-7028b5b7762d' date '07/12/2013' time '22:36:32' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.4' message 'and some more pushing' id 'e97adc3a-6673-4232-b209-5d07460f3fa7' date '07/12/2013' time '21:33:14' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.3' message 'pushing classes around' id '259587e0-a86c-4ca5-8fc0-0994331790e2' date '07/12/2013' time '20:44:42' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.2' message 'move over some necessary methods' id '7f9162a0-71e5-4356-b1f7-cfebba37531d' date '07/12/2013' time '19:58:21' author 'dkh' ancestors ((name 'Metacello-TestsMCCore-dkh.1' message 'split out Metacello-TestsMC tests that depend upon tests in Metacello-TestsCore and put them in Metacello-TestsMCCore...working on splitting tests into two groups to reduce overall run time for travis' id 'bac4026f-5094-454f-b9f5-54b60fdaf502' date '07/12/2013' time '19:18:54' author 'dkh' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())